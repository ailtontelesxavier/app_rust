# Etapa 1: Construção das dependências
FROM python:3.12-slim AS requirements-stage
ENV POETRY_VIRTUALENVS_CREATE=false
WORKDIR /tmp

# Instalar as dependências de compilação
RUN apt-get update && apt-get install -y \
    gcc \
    libffi-dev \
    libpq-dev \
    make \
    iputils-ping \
    tzdata && \
    ln -fs /usr/share/zoneinfo/America/Sao_Paulo /etc/localtime && \
    dpkg-reconfigure --frontend noninteractive tzdata && \
    rm -rf /var/lib/apt/lists/*

# Defina a variável de ambiente TZ para o fuso horário correto
ENV TZ="America/Sao_Paulo"
RUN echo "America/Sao_Paulo" > /etc/timezone && dpkg-reconfigure -f noninteractive tzdata

# Install Poetry and dependencias
RUN pip install poetry
COPY pyproject.toml poetry.lock ./
RUN poetry install --no-interaction --no-ansi --no-root

# Etapa 2: Construção da imagem final
FROM python:3.12-slim
ENV POETRY_VIRTUALENVS_CREATE=false
WORKDIR /app

# Copy installed dependencies from the requirements stage
COPY --from=requirements-stage /usr/local/lib/python3.12/site-packages /usr/local/lib/python3.12/site-packages
COPY --from=requirements-stage /usr/local/bin /usr/local/bin

# Copy application code
COPY . /app

# Criar usuário não-root opcional (descomente se necessário)
# RUN useradd -m app_user
# USER app_user

# Make entrypoint.sh executable
RUN chmod +x ./entrypoint.sh

EXPOSE 8004

# Comando padrão para rodar a aplicação
CMD ["./entrypoint.sh"]